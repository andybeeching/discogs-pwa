PWA Project:
    A simple project to take PWA concepts for a spin, by building a vinyl record lookup service, backed by Discogs.

Stack:
    ✔ Select CSS(-in-JS) framework @done(19-09-10 08:55)
    ✔ Select JS/templating framework @done(19-09-06 13:30)
    ✔ Add Babel for transpilation @done(19-09-04 15:40)
    ☐ Bundle with webpack
        ✔ Impl separate dev + prod builds @done(19-09-10 08:55)
        ✔ Add middlewear hot relaoding @done(19-09-06 13:30)
        ☐ Improve current watch setup (spawn subprocesses?)
    ✔ Add test harness @done(19-09-04 15:40)
    ☐ Add Husky hooks
    ✔ Add HMR @done(19-09-06 13:29)
    ☐ Figure out remote debugging for node, and front-end
    ☐ Tidy up git commit history
    ✔ Add .editconfig @done(19-09-08 15:04)
    ☐ Add stylelint
    ☐ Add autoprefixer
    ☐ Add eslint-plugin-jsdoc
    ✘ Enable HRM with MiniCssExtractPlugin @cancelled(19-09-10 11:22)
    ☐ Consider adding CI (for fun)
    ☐ Write README

Front-End:
    ☐ Landing page
        ✔ Implement partials @done(19-09-06 13:28)
    ✔ Artist page @done(19-09-09 14:04)
        ✔ Tweak measure to ensure it's not too long @done(19-09-09 14:04)
        ✔ Handle pagination @done(19-09-08 12:24)
        ☐ Handle Oxford comma in Members list
    ✔ Release page @done(19-09-09 14:04)
        ✔ Handle large album image - from mobile up @done(19-09-09 14:04)
    ✔ Results page @done(19-09-09 14:04)
        ✔ Handle no search results @done(19-09-08 14:58)
        ✔ Handle pagination @done(19-09-08 12:24)
        ☐ Handle layout shift with image loading (+ loader dismissal)
        ☐ Consider increasing results size to 100 for streaming experiments
    ✔ Add 'loading' state @done(19-09-09 14:04)
    ☐ Add mapping for URL slugs
    ☐ Offline notification
    ☐ Handle 4xx
    ☐ Handle 5xx
    ✔ Add lang and dir attribute @done(19-09-08 12:26)
    ☐ Add preload links
    ☐ Review meta tags
    ☐ Consider adding nprogress bar

Back-end:
    ☐ Select host
    ☐ Setup deployment to host
    ✔ Setup local server @done(19-09-04 15:40)
    ✔ Implement basic shell (no API content) @done(19-09-06 13:30)
    ✔ Implement route-url matching @done(19-09-06 13:30)
    ✔ Implement streaming response pattern @done(19-09-04 19:22)
    ✔ Implement ENV vars for secret key @done(19-09-06 16:43)
    ✔ Implement node-fetch API client @done(19-09-06 13:30)
    ✔ Wire-up API calls @done(19-09-06 13:30)
    ✔ Implement some kind of caching @done(19-09-06 13:30)
    ✔ Unit tests @started(19-09-10 11:22) @done(19-09-15 23:31) @lasted(5d12h9m25s)
    ☐ Handle API call errors
    ✔ Enable HTTPS on localhost @done(19-09-08 13:21)
    ✔ Enable HTTP2 on localhost @done(19-09-08 18:03)
    ☐ Implement Brotli for compression
    ☐ Add robots.txt
    ☐ Helmet JS for header-based security

Improvements:
    ☐ Consider using Typescript or Flow annotations
    ☐ Use Marko to provide 'real' HTML stream rendering
    ☐ History API integration
    ☐ Get html-loader to work with static HTML (if not Marko)
    ☐ Rename pwa.todo => .todo
    ☐ Combine Jest config files (prefer jest.config.js)
    ☐ Add will-transform to loader
    ☐ Double-check Artist pages have parallelised API calls
    ☐ Handle out of bound pagination calls
    ☐ Rename artist => artistSummary template
    ☐ Rename server => app?
    ☐ server.test.js - make top-level generic nock routes

Features:
    ☐ Enable album searching
    ☐ Implement user mgt via Oauth
    ☐ Expose more data in UI (e.g. track times, ratings)
    ☐ Bring in 3rd party data (e.g. Amazon/Spotify ratings)
    ☐ Add Analytics to track page views/times etc...
    ☐ RUM solution?
