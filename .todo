PWA Project:
    A simple project to take PWA concepts for a spin, by building a vinyl record lookup service, backed by Discogs.

Stack:
    ✔ Select CSS(-in-JS) framework @done(19-09-10 08:55)
    ✔ Select JS/templating framework @done(19-09-06 13:30)
    ✔ Add Babel for transpilation @done(19-09-04 15:40)
    ☐ Bundle with webpack
        ✔ Impl separate dev + prod builds @done(19-09-10 08:55)
        ✔ Add middlewear hot relaoding @done(19-09-06 13:30)
        ☐ Improve current watch setup (spawn subprocesses?)
    ✔ Add test harness @done(19-09-04 15:40)
    ✔ Add Husky hooks @done(19-09-16 17:03)
    ✔ Add HMR @done(19-09-06 13:29)
    ✔ Figure out remote debugging for node, and front-end @done(19-09-18 15:36)
    ☐ Tidy up git commit history
    ✔ Add .editconfig @done(19-09-08 15:04)
    ✘ Enable HRM with MiniCssExtractPlugin @cancelled(19-09-10 11:22)
    ☐ Write README

Front-End:
    ✔ Landing page @done(19-09-19 11:41)
        ✔ Implement partials @done(19-09-06 13:28)
    ✔ Artist page @done(19-09-09 14:04)
        ✔ Tweak measure to ensure it's not too long @done(19-09-09 14:04)
        ✔ Handle pagination @done(19-09-08 12:24)
        ☐ Handle Oxford comma in Members list
    ✔ Release page @done(19-09-09 14:04)
        ✔ Handle large album image - from mobile up @done(19-09-09 14:04)
    ✔ Results page @done(19-09-09 14:04)
        ✔ Handle no search results @done(19-09-08 14:58)
        ✔ Handle pagination @done(19-09-08 12:24)
    ✔ Add 'loading' state @done(19-09-09 14:04)
    ✔ Offline notification @done(19-09-19 14:32)
    ✔ Add service worker @started(19-09-18 11:37) @done(19-09-18 15:06) @lasted(3h29m20s)
    ✔ Handle 4xx @done(19-09-16 14:40)
    ✔ Handle 5xx @done(19-09-16 15:34)
    ✔ Add lang and dir attribute @done(19-09-08 12:26)

Back-end:
    ✔ Select host @done(19-09-20 21:41)
    ✔ Setup deployment to host @done(19-09-20 21:41)
    ✔ Setup local server @done(19-09-04 15:40)
    ✔ Implement basic shell (no API content) @done(19-09-06 13:30)
    ✔ Implement route-url matching @done(19-09-06 13:30)
    ✔ Implement streaming response pattern @done(19-09-04 19:22)
    ✔ Implement ENV vars for secret key @done(19-09-06 16:43)
    ✔ Implement node-fetch API client @done(19-09-06 13:30)
    ✔ Wire-up API calls @done(19-09-06 13:30)
    ✔ Implement some kind of caching @done(19-09-06 13:30)
    ✔ Unit tests @started(19-09-10 11:22) @done(19-09-15 23:31) @lasted(5d12h9m25s)
    ✔ Handle API call errors @done(19-09-16 15:34)
    ✔ Enable HTTPS on localhost @done(19-09-08 13:21)
    ✔ Enable HTTP2 on localhost @done(19-09-08 18:03)
    ✔ Implement Gzip for compression @done(19-09-18 21:32)
    ✔ Add robots.txt @done(19-09-18 18:06)
    ✔ Helmet JS for header-based security @done(19-09-19 09:57)
    ✔ Configure caching rules for assets (pages and statics) @done(19-09-18 21:17)

Improvements:
    ☐ Consider using Typescript or Flow annotations
    ☐ Use Marko to provide 'real' HTML stream rendering
    ☐ Get html-loader to work with static HTML (if not Marko)
    ✔ Rename pwa.todo => .todo @done(19-09-18 15:38)
    ✔ Combine Jest config files (prefer jest.config.js) @done(19-09-16 15:34)
    ✘ Add will-transform to loader @cancelled(19-09-18 15:30)
    ✔ Double-check Artist pages have parallelised API calls @done(19-09-18 15:26)
    ☐ Handle out of bound pagination calls
    ☐ Rename artist => artistSummary template
    ✘ Rename server => app? @cancelled(19-09-20 21:41)
    ☐ server.test.js - make top-level generic nock routes
    ☐ Separate out routes from server.js
    ☐ Handle long-loading content for loader (aka add timeout)
    ☐ Use webpack-stats-plugin to glean static asset build info
    ✔ Change object-fit to cover for album art @done(19-09-18 21:23)
    ☐ Add stylelint
    ☐ Add autoprefixer
    ☐ Add eslint-plugin-jsdoc
    ☐ Consider using Phantom JS for DOM tests
    ☐ Add Axe/pa11y-ci for a11y testing
    ☐ Strip dev comments from build (or use DEBUG env var)
    ☐ Winston vs Bunyan for logging
    ☐ Rewrite query strings for URL slugs
    ☐ Figure out how to flush first html content from service worker
    ☐ Consider adding CI (for fun)
    ☐ Handle layout shift with
    ☐ Add preload links
    ☐ Review meta tags
    ☐ ARIA
    ☐ History API integration
    ☐ Add mapping for URL slugs
    ☐ Add title to each page
    ☐ Make HMR and service workers in DEV work
    ☐ Ensure service worker registration doesn't block main thread

Features:
    ☐ Enable album searching
    ☐ Implement user mgt via Oauth
    ☐ Expose more data in UI (e.g. track times, ratings)
    ☐ Bring in 3rd party data (e.g. Amazon/Spotify ratings)
    ☐ Add Analytics to track page views/times etc...
    ☐ RUM solution?
    ☐ Consider adding nprogress bar
